[debug] [2020-12-12T20:12:55.446Z] ----------------------------------------------------------------------
[debug] [2020-12-12T20:12:55.450Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\gaura\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2020-12-12T20:12:55.451Z] CLI Version:   8.19.0
[debug] [2020-12-12T20:12:55.451Z] Platform:      win32
[debug] [2020-12-12T20:12:55.451Z] Node Version:  v14.15.1
[debug] [2020-12-12T20:12:55.468Z] Time:          Sun Dec 13 2020 01:42:55 GMT+0530 (India Standard Time)
[debug] [2020-12-12T20:12:55.468Z] ----------------------------------------------------------------------
[debug] [2020-12-12T20:12:55.468Z] 
[debug] [2020-12-12T20:12:55.481Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-12T20:12:55.482Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\gaura\Desktop\React\Backend\ilovenat

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-12-12T20:13:37.690Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-12-12T20:13:38.281Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:13:41 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project realtime-7279d (Realtime) 
[info] 
=== Firestore Setup
[debug] [2020-12-12T20:13:53.395Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/realtime-7279d/services/firestore.googleapis.com  
 
[debug] [2020-12-12T20:13:55.188Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:13:57 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:13:55.189Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/realtime-7279d  
 
[debug] [2020-12-12T20:13:55.992Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:13:58 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:13:55.993Z] database_type: CLOUD_FIRESTORE
[debug] [2020-12-12T20:13:55.994Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-12T20:13:55.995Z] > authorizing via signed-in user
[debug] [2020-12-12T20:13:55.996Z] [iam] checking project realtime-7279d for permissions ["firebase.projects.get"]
[debug] [2020-12-12T20:13:55.997Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/realtime-7279d:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-12-12T20:13:57.572Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:14:00 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1406","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-12-12T20:14:29.929Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/realtime-7279d/releases?pageSize=10&pageToken=  
 
[debug] [2020-12-12T20:14:31.473Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:14:34 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:14:31.476Z] Found ruleset: projects/realtime-7279d/rulesets/3a988f9c-bc58-4181-a4e4-c135c91b9c4c
[debug] [2020-12-12T20:14:31.479Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/realtime-7279d/rulesets/3a988f9c-bc58-4181-a4e4-c135c91b9c4c  
 
[debug] [2020-12-12T20:14:32.863Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:14:35 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:14:33.066Z] Error: EISDIR: illegal operation on a directory, open 'C:\Users\gaura\Desktop\React\Backend\ilovenat'
    at Object.openSync (fs.js:476:3)
    at Object.writeFileSync (fs.js:1467:35)
    at Config.writeProjectFile (C:\Users\gaura\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:156:8)
    at C:\Users\gaura\AppData\Roaming\npm\node_modules\firebase-tools\lib\init\features\firestore\rules.js:50:27
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2020-12-12T20:14:39.663Z] ----------------------------------------------------------------------
[debug] [2020-12-12T20:14:39.668Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\gaura\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2020-12-12T20:14:39.668Z] CLI Version:   8.19.0
[debug] [2020-12-12T20:14:39.668Z] Platform:      win32
[debug] [2020-12-12T20:14:39.669Z] Node Version:  v14.15.1
[debug] [2020-12-12T20:14:39.670Z] Time:          Sun Dec 13 2020 01:44:39 GMT+0530 (India Standard Time)
[debug] [2020-12-12T20:14:39.671Z] ----------------------------------------------------------------------
[debug] [2020-12-12T20:14:39.671Z] 
[debug] [2020-12-12T20:14:39.683Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-12T20:14:39.684Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\gaura\Desktop\React\Backend\ilovenat

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-12-12T20:15:03.454Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-12-12T20:15:04.084Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:06 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project realtime-7279d (Realtime) 
[info] 
=== Firestore Setup
[debug] [2020-12-12T20:15:07.755Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/realtime-7279d/services/firestore.googleapis.com  
 
[debug] [2020-12-12T20:15:09.572Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:12 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:15:09.575Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/realtime-7279d  
 
[debug] [2020-12-12T20:15:10.305Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:15:10.307Z] database_type: CLOUD_FIRESTORE
[debug] [2020-12-12T20:15:10.309Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-12T20:15:10.312Z] > authorizing via signed-in user
[debug] [2020-12-12T20:15:10.313Z] [iam] checking project realtime-7279d for permissions ["firebase.projects.get"]
[debug] [2020-12-12T20:15:10.316Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/realtime-7279d:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-12-12T20:15:11.812Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:14 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1399","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-12-12T20:15:13.268Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/realtime-7279d/releases?pageSize=10&pageToken=  
 
[debug] [2020-12-12T20:15:14.661Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:17 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:15:14.664Z] Found ruleset: projects/realtime-7279d/rulesets/3a988f9c-bc58-4181-a4e4-c135c91b9c4c
[debug] [2020-12-12T20:15:14.670Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/realtime-7279d/rulesets/3a988f9c-bc58-4181-a4e4-c135c91b9c4c  
 
[debug] [2020-12-12T20:15:16.095Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:18 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-12-12T20:15:21.358Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/realtime-7279d/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2020-12-12T20:15:21.358Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/realtime-7279d/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2020-12-12T20:15:22.767Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:25 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-12T20:15:22.873Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 20:15:25 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2020-12-12T20:15:45.449Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2020-12-12T20:15:45.549Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2020-12-12T20:15:45.549Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"8.2.0","browserURL":"https://www.gstatic.com/firebasejs/8.2.0/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/8.2.0/firebase.tgz"},"live":{"version":"8.2","browserURL":"https://www.gstatic.com/firebasejs/live/8.2/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/8.2/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/8.2.0/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/8.2.0/firebase-app.js","auth":"https://www.gstatic.com/firebasejs/8.2.0/firebase-auth.js","database":"https://www.gstatic.com/firebasejs/8.2.0/firebase-database.js","firestore":"https://www.gstatic.com/firebasejs/8.2.0/firebase-firestore.js","functions":"https://www.gstatic.com/firebasejs/8.2.0/firebase-functions.js","installations":"https://www.gstatic.com/firebasejs/8.2.0/firebase-installations.js","messaging":"https://www.gstatic.com/firebasejs/8.2.0/firebase-messaging.js","storage":"https://www.gstatic.com/firebasejs/8.2.0/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/8.2.0/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/8.2.0/firebase-remote-config.js","firestore.memory":"https://www.gstatic.com/firebasejs/8.2.0/firebase-firestore.memory.js"}}
[info] +  Wrote public/index.html 
[info] 
[info] i  Didn't detect a .git folder. Assuming C:\Users\gaura\Desktop\React\Backend\ilovenat is the project root. 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=245102075&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2020-12-12T20:16:04.001Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"886fa7b0dde1e827d032","redirect_uri":"http://localhost:9005","state":"245102075"}
[debug] [2020-12-12T20:16:04.361Z] <<< HTTP RESPONSE 200 {"date":"Sat, 12 Dec 2020 20:16:07 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","server":"GitHub.com","status":"200 OK","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With, Accept-Encoding","etag":"W/\"24ef6d00880505615e6f066b1d2ce2af\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker-5029ae85.js gist.github.com/socket-worker-5029ae85.js","x-github-request-id":"321B:6A5F:3FD29F:534BAD:5FD52506"}
[debug] [2020-12-12T20:16:04.363Z] >>> [apiv2][query] GET https://api.github.com/user [none]
[debug] [2020-12-12T20:16:04.942Z] <<< [apiv2][status] GET https://api.github.com/user 200
[debug] [2020-12-12T20:16:04.943Z] <<< [apiv2][body] GET https://api.github.com/user {"login":"Gtiwari557","id":66882529,"node_id":"MDQ6VXNlcjY2ODgyNTI5","avatar_url":"https://avatars3.githubusercontent.com/u/66882529?v=4","gravatar_id":"","url":"https://api.github.com/users/Gtiwari557","html_url":"https://github.com/Gtiwari557","followers_url":"https://api.github.com/users/Gtiwari557/followers","following_url":"https://api.github.com/users/Gtiwari557/following{/other_user}","gists_url":"https://api.github.com/users/Gtiwari557/gists{/gist_id}","starred_url":"https://api.github.com/users/Gtiwari557/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gtiwari557/subscriptions","organizations_url":"https://api.github.com/users/Gtiwari557/orgs","repos_url":"https://api.github.com/users/Gtiwari557/repos","events_url":"https://api.github.com/users/Gtiwari557/events{/privacy}","received_events_url":"https://api.github.com/users/Gtiwari557/received_events","type":"User","site_admin":false,"name":null,"company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":1,"public_gists":0,"followers":0,"following":0,"created_at":"2020-06-13T17:52:48Z","updated_at":"2020-12-07T13:21:58Z","private_gists":0,"total_private_repos":1,"owned_private_repos":1,"disk_usage":1,"collaborators":0,"two_factor_authentication":false,"plan":{"name":"free","space":976562499,"collaborators":0,"private_repos":10000}}
[info] 
[info] +  Success! Logged into GitHub as Gtiwari557 
[info] 
[debug] [2020-12-12T20:17:08.371Z] >>> [apiv2][query] GET https://api.github.com/repos/ /actions/secrets/public-key type=owner
[debug] [2020-12-12T20:17:08.710Z] <<< [apiv2][status] GET https://api.github.com/repos/ /actions/secrets/public-key 404
[debug] [2020-12-12T20:17:08.711Z] <<< [apiv2][body] GET https://api.github.com/repos/ /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
